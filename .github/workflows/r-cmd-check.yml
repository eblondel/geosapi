# Build

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: R ${{ matrix.config.r }} | GeoServer ${{ matrix.config.geoserver }} | ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: ubuntu-latest,  r: 'release', geoserver: 'latest'}
          - {os: ubuntu-latest,  r: 'devel', geoserver: 'latest'}
    steps:
      - uses: actions/checkout@v2
      #Docker Geoserver set-up
      - name: Set up GeoServer ${{ matrix.config.geoserver }}
        run: |
          docker pull kartoza/postgis
          docker run -d --name="postgis" kartoza/postgis
          docker run --link postgis:postgis -d -p 8080:8080 oscarfonts/geoserver:${{ matrix.config.geoserver}}
      #R Set-up
      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
      #Install dependencies
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::XML
      #Check R Package
      - name: Check R package
        uses: r-lib/actions/check-r-package@check-r-package
        with:
          artifact-name: geosapi_r-${{ matrix.config.r }}_geoserver-${{matrix.config.geoserver}}_${{ matrix.config.os }}-results
